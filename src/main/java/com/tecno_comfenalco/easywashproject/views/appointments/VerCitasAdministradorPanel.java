/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tecno_comfenalco.easywashproject.views.appointments;

import com.tecno_comfenalco.easywashproject.enums.EnumAppointmentStatus;
import com.tecno_comfenalco.easywashproject.models.Appointment;
import com.tecno_comfenalco.easywashproject.models.Service;
import com.tecno_comfenalco.easywashproject.repository.FileBasedRepsitoryImpl.AppointmentRepositoryImpl;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jacob
 */
public class VerCitasAdministradorPanel extends javax.swing.JPanel {
    private AppointmentRepositoryImpl repo;
    private List<Appointment> appointments;
    private DefaultTableModel dtm;

    /**
     * Creates new form VerCitasAdministradorPanel1
     */
    public VerCitasAdministradorPanel() {
        initComponents();
        repo = new AppointmentRepositoryImpl();
        appointments = repo.readAll();
        cargarTabla();
        configurarAcciones();

    }

    private void cargarTabla() {
        dtm = new DefaultTableModel();
        String[] titulo = new String[] { "Id", "Tipo de servicio", "Precio", "Trabajador", "Estado", "Fecha", "Hora" };
        dtm.setColumnIdentifiers(titulo);

        for (Appointment appointment : appointments) {
            if (appointment.getService() == null || appointment.getEmployee() == null)
                continue;
            for (Service service : appointment.getService()) {
                dtm.addRow(new Object[] {
                        appointment.getId(), service.getName(), service.getPrice(),
                        appointment.getEmployee().getFullname(), appointment.getStatus(), appointment.getDate(),
                        appointment.getStartTime()
                });
            }
        }

        jTable1.setModel(dtm);
    }

    private void configurarAcciones() {
        btnSetAppointmentRealizada.addActionListener(e -> CambiarEstado(EnumAppointmentStatus.REALIZADO));
        btnSetAppointmentCotizada.addActionListener(e -> CambiarEstado(EnumAppointmentStatus.COTIZADO));
        btnSetAppointmentCancelada.addActionListener(e -> CambiarEstado(EnumAppointmentStatus.CANCELADA));
    }

    private void CambiarEstado(EnumAppointmentStatus nuevoEstado) {
        int filaSeleccionada = jTable1.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona una cita de la tabla");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(this,
                "Â¿Estas seguro de cambiar el estado a " + nuevoEstado + "?", "Confirmar cambio de estado",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion != JOptionPane.YES_OPTION) {
            return;
        }

        // Obtener cita por id
        Long id = (Long) jTable1.getValueAt(filaSeleccionada, 0);
        Appointment citaSeleccionada = repo.findById(id);

        if (citaSeleccionada != null) {
            try {
                EnumAppointmentStatus estadoEnum = nuevoEstado;
                citaSeleccionada.setStatus(estadoEnum);
                repo.update(citaSeleccionada);
                appointments = repo.readAll();
                cargarTabla();
                JOptionPane.showMessageDialog(this, "Estado Actualizado a" + nuevoEstado + ".");
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Estado Invalido: " + nuevoEstado);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo encontrar la cita correspondiente");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSetAppointmentCancelada = new javax.swing.JButton();
        btnSetAppointmentRealizada = new javax.swing.JButton();
        btnSetAppointmentCotizada = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel1.setText("Ver Citas");
        bg.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null }
                },
                new String[] {
                        "Tipo de Servicio", "Precio", "Trabajador", "Estado", "Fecha", "Hora"
                }));
        jScrollPane1.setViewportView(jTable1);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 67, 600, 260));

        btnSetAppointmentCancelada.setBackground(new java.awt.Color(153, 153, 153));
        btnSetAppointmentCancelada.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnSetAppointmentCancelada.setText("Cambiar Estado a Cancelada");
        btnSetAppointmentCancelada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetAppointmentCancelada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetAppointmentCanceladaActionPerformed(evt);
            }
        });
        bg.add(btnSetAppointmentCancelada, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, -1, 40));

        btnSetAppointmentRealizada.setBackground(new java.awt.Color(153, 153, 153));
        btnSetAppointmentRealizada.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnSetAppointmentRealizada.setText("Cambiar Estado a Realizada");
        btnSetAppointmentRealizada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetAppointmentRealizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetAppointmentRealizadaActionPerformed(evt);
            }
        });
        bg.add(btnSetAppointmentRealizada, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 190, 40));

        btnSetAppointmentCotizada.setBackground(new java.awt.Color(153, 153, 153));
        btnSetAppointmentCotizada.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnSetAppointmentCotizada.setText("Cambiar Estado a Cotizada");
        btnSetAppointmentCotizada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetAppointmentCotizada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetAppointmentCotizadaActionPerformed(evt);
            }
        });
        bg.add(btnSetAppointmentCotizada, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, -1, 40));

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 400));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSetAppointmentRealizadaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSetAppointmentRealizadaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnSetAppointmentRealizadaActionPerformed

    private void btnSetAppointmentCotizadaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSetAppointmentCotizadaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnSetAppointmentCotizadaActionPerformed

    private void btnSetAppointmentCanceladaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSetAppointmentCanceladaActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnSetAppointmentCanceladaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnSetAppointmentCancelada;
    private javax.swing.JButton btnSetAppointmentRealizada;
    private javax.swing.JButton btnSetAppointmentCotizada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
