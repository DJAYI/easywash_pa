/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tecno_comfenalco.easywashproject.views.vehicles;

import java.util.List;

import com.tecno_comfenalco.easywashproject.controllers.AuthController;
import com.tecno_comfenalco.easywashproject.models.Vehicle;
import com.tecno_comfenalco.easywashproject.repository.FileBasedRepsitoryImpl.ClientRepositoryImpl;
import com.tecno_comfenalco.easywashproject.repository.FileBasedRepsitoryImpl.VehicleRepositoryImpl;

import javax.swing.JOptionPane;

/**
 *
 * @author jacob
 */
public class VerMisVehiculos extends javax.swing.JPanel {
    private final AuthController authController = AuthController.getInstance();

    /**
     * Creates new form VerMisVehiculos1
     */
    public VerMisVehiculos() {
        initComponents();
        // Asocia el evento al botón de eliminar vehículo
        btnDeleteVehicle.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarVehiculo();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVehicles = new javax.swing.JTable();
        btnDeleteVehicle = new javax.swing.JButton();
        btnAddVehicle = new javax.swing.JButton();
        btnEditVehicle = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTitle.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        labelTitle.setText("Ver Mis Vehiculos");
        bg.add(labelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        // 1. Se llama a la lista de servicio directamente del archivo JSON
        List<Vehicle> vehicles = new ClientRepositoryImpl().findByDocumentNumber(authController.getSession())
                .getVehicles();
        // 2. Se inicializan las columnas y filas que se van a utilizar
        Object[][] data = new Object[vehicles.size()][4];

        // 3. Se rellenan las filas segun su columna respectiva
        for (int i = 0; i < vehicles.size(); i++) {
            Vehicle v = vehicles.get(i);
            data[i][0] = v.getBrand();
            data[i][1] = v.getModel();
            data[i][2] = v.getPlate();
            data[i][3] = v.getType();
        }

        tableVehicles.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[] {
                        "Marca", "Modelo", "Placa", "Tipo"
                }));
        jScrollPane1.setViewportView(tableVehicles);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 580, 280));

        btnDeleteVehicle.setBackground(new java.awt.Color(153, 153, 153));
        btnDeleteVehicle.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnDeleteVehicle.setText("Eliminar Vehiculo");
        btnDeleteVehicle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bg.add(btnDeleteVehicle, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 160, 40));

        btnAddVehicle.setBackground(new java.awt.Color(153, 153, 153));
        btnAddVehicle.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnAddVehicle.setText("Añadir Nuevo Vehiculo");
        btnAddVehicle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bg.add(btnAddVehicle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 160, 40));

        btnEditVehicle.setBackground(new java.awt.Color(153, 153, 153));
        btnEditVehicle.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnEditVehicle.setText("Editar Vehiculo");
        btnEditVehicle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        // bg.add(btnEditVehicle, new org.netbeans.lib.awtextra.AbsoluteConstraints(231,
        // 350, 180, 40));

        add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 400));

        btnAddVehicle.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVehicleActionPerformed(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddVehicleActionPerformed(java.awt.event.ActionEvent evt) {
        RegisterVehicle registerVehicle = new RegisterVehicle();
        registerVehicle.setVisible(true);
    }

    // Método privado para eliminar un vehículo seleccionado por placa
    private void eliminarVehiculo() {
        int selectedRow = tableVehicles.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor seleccione un vehículo de la tabla.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Se asume que la placa está en la columna 2
        String placa = tableVehicles.getValueAt(selectedRow, 2).toString();
        if (placa == null || placa.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se pudo obtener la placa del vehículo seleccionado.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        VehicleRepositoryImpl vehicleRepo = new VehicleRepositoryImpl();
        List<Vehicle> vehiculos = vehicleRepo.readAll();
        Vehicle vehiculoAEliminar = null;
        for (Vehicle v : vehiculos) {
            if (v.getPlate().equalsIgnoreCase(placa)) {
                vehiculoAEliminar = v;
                break;
            }
        }

        if (vehiculoAEliminar == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el vehículo con la placa especificada.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Está seguro que desea eliminar el vehículo con placa: " + placa + "?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        vehicleRepo.delete(vehiculoAEliminar);

        // Quitar el vehículo de la lista del cliente actual y actualizar el cliente
        ClientRepositoryImpl clientRepo = new ClientRepositoryImpl();
        var cliente = clientRepo.findByDocumentNumber(authController.getSession());
        if (cliente != null) {
            cliente.getVehicles().removeIf(v -> v.getPlate().equalsIgnoreCase(placa));
            clientRepo.update(clientRepo.findByDocumentNumber(authController.getSession()), cliente);
        }

        JOptionPane.showMessageDialog(this, "Vehículo eliminado correctamente.",
                "Éxito", JOptionPane.INFORMATION_MESSAGE);

        // Recargar la tabla después de eliminar
        List<Vehicle> vehicles = new ClientRepositoryImpl().findByDocumentNumber(authController.getSession())
                .getVehicles();
        Object[][] data = new Object[vehicles.size()][4];
        for (int i = 0; i < vehicles.size(); i++) {
            Vehicle v = vehicles.get(i);
            data[i][0] = v.getBrand();
            data[i][1] = v.getModel();
            data[i][2] = v.getPlate();
            data[i][3] = v.getType();
        }
        tableVehicles.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[] {
                        "Marca", "Modelo", "Placa", "Tipo"
                }));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnDeleteVehicle;
    private javax.swing.JButton btnAddVehicle;
    private javax.swing.JButton btnEditVehicle;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableVehicles;
    // End of variables declaration//GEN-END:variables
}
